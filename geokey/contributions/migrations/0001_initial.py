# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-03-28 15:13
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
try:
    from django.contrib.postgres.fields.jsonb import JSONField
except ImportError:
    from django_pgjson.fields import JsonBField as JSONField
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'active', b'active'), (b'deleted', b'deleted')], default=b'active', max_length=20)),
                ('review_status', models.CharField(blank=True, choices=[(b'open', b'open'), (b'resolved', b'resolved')], max_length=10, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalComment',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('status', models.CharField(choices=[(b'active', b'active'), (b'deleted', b'deleted')], default=b'active', max_length=20)),
                ('review_status', models.CharField(blank=True, choices=[(b'open', b'open'), (b'resolved', b'resolved')], max_length=10, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical comment',
            },
        ),
        migrations.CreateModel(
            name='HistoricalObservation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'active', b'active'), (b'draft', b'draft'), (b'review', b'review'), (b'pending', b'pending'), (b'deleted', b'deleted')], default=b'active', max_length=20)),
                ('properties', JSONField(default={})),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('version', models.IntegerField(default=1)),
                ('search_index', models.TextField(blank=True, null=True)),
                ('display_field', models.TextField(blank=True, null=True)),
                ('expiry_field', models.DateTimeField(blank=True, null=True)),
                ('num_media', models.IntegerField(default=0)),
                ('num_comments', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical observation',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(geography=True, srid=4326)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('version', models.IntegerField(default=1)),
                ('private', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[(b'active', b'active'), (b'review', b'review')], default=b'active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'active', b'active'), (b'deleted', b'deleted')], default=b'active', max_length=20)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'active', b'active'), (b'draft', b'draft'), (b'review', b'review'), (b'pending', b'pending'), (b'deleted', b'deleted')], default=b'active', max_length=20)),
                ('properties', JSONField(default={})),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('version', models.IntegerField(default=1)),
                ('search_index', models.TextField(blank=True, null=True)),
                ('display_field', models.TextField(blank=True, null=True)),
                ('expiry_field', models.DateTimeField(blank=True, null=True)),
                ('num_media', models.IntegerField(default=0)),
                ('num_comments', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='categories.Category')),
            ],
            options={
                'ordering': ['-updated_at', 'id'],
            },
        ),
        migrations.CreateModel(
            name='AudioFile',
            fields=[
                ('mediafile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contributions.MediaFile')),
                ('audio', models.FileField(upload_to=b'user-uploads/audio')),
            ],
            options={
                'ordering': ['id'],
            },
            bases=('contributions.mediafile',),
        ),
        migrations.CreateModel(
            name='ImageFile',
            fields=[
                ('mediafile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contributions.MediaFile')),
                ('image', models.ImageField(upload_to=b'user-uploads/images')),
            ],
            options={
                'ordering': ['id'],
            },
            bases=('contributions.mediafile',),
        ),
        migrations.CreateModel(
            name='VideoFile',
            fields=[
                ('mediafile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contributions.MediaFile')),
                ('video', models.ImageField(upload_to=b'user-uploads/videos')),
                ('youtube_id', models.CharField(max_length=100)),
                ('thumbnail', models.ImageField(null=True, upload_to=b'user-uploads/videos')),
                ('youtube_link', models.URLField(blank=True, max_length=255, null=True)),
                ('swf_link', models.URLField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
            bases=('contributions.mediafile',),
        ),
    ]
